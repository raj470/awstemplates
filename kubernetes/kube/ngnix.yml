apiVersion: v1
kind: Namespace
metadata:
  name: aufnito
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: aufnito
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
    worker_connections  1024;
    }
    http {
    server {
    listen  8090;
    server_name localhost;

    root /var/www;
    index index.html index.htm index.nginx-debian.html;
    
    location / {
    try_files $uri $uri/ /index.html?$args;
    }

    }     
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aufnito-nginx
  namespace: aufnito
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: aufnito-nginx
  template:
    metadata:
      labels:
        app: aufnito-nginx
    spec:
      initContainers:
      - name: create-html
        image: alpine
        command: 
        - sh
        - '-c'
        - |
          echo "Hello SCRIBETECH" > /var/www/index.html
        volumeMounts:
        - mountPath: /var/www/
          name: html-file
      containers:
      - name: aufnito-nginx
        image: nginx:1.16.1
        ports:
        - containerPort: 8090
        volumeMounts:
        - mountPath: /etc/nginx
          name: nginx-conf
          readOnly: true
        - mountPath: /var/www/
          name: html-file
          
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
      - name: html-file
        emptyDir: {}
      
              
---
apiVersion: v1
kind: Service
metadata:
  name: aufnito-nginx
  namespace: aufnito
spec:
  selector: 
    app: aufnito-nginx
  type: NodePort  
  ports:
    - port: 8090
      targetPort: 8090
      nodePort: 30002
