apiVersion: v1
kind: Namespace
metadata:
  name: raj
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: raj-conf
  namespace: raj
data:
  nginx.conf: |
    user nginx;
    worker_processes  3;
    error_log  /var/log/nginx/error.log;
    events {
    worker_connections  1024;
    }
    http {
    server {
    listen  8090;
    server_name localhost;

    root /var/www;
    index index.html index.htm index.nginx-debian.html;
    
    location / {
    try_files $uri $uri/ /index.html?$args;
    }

    }     
    }
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-pdb
  namespace: raj
spec:
  minAvailable: 2
  maxUnavailable: 1
  selector:
    matchLabels:
      app: raj-nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: raj-nginx
  namespace: raj
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: raj-nginx
  template:
    metadata:
      labels:
        app: raj-nginx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
             -  matchExpressions:
                - key: topology.kubernetes.io/zone
                  operator: In
                  values:
                  - us-east-1b     
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - raj-nginx
              topologyKey: "kubernetes.io/hostname"
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - aufnito-nginx
                topologyKey: "kubernetes.io/hostname"
      initContainers:
        - name: create-html
          image: alpine
          command: 
            - sh
            - '-c'
            - |
              echo "Hello this is Raj!!!" > /var/www/index.html
          volumeMounts:
            - mountPath: /var/www/
              name: html-file
      containers:
        - name: raj-nginx
          image: nginx:1.16.1
          ports:
            - containerPort: 8090
          volumeMounts:
            - mountPath: /etc/nginx
              name: raj-conf
              readOnly: true
            - mountPath: /var/www/
              name: html-file
      volumes:
        - name: raj-conf
          configMap:
            name: raj-conf
            items:
              - key: nginx.conf
                path: nginx.conf
        - name: html-file
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: raj-nginx
  namespace: raj
spec:
  selector: 
    app: raj-nginx
  type: NodePort  
  ports:
    - port: 8090
      targetPort: 8090
      nodePort: 30002
