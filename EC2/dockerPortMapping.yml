AWSTemplateFormatVersion: "2010-09-09"
Description: This template is used to create a ec2 instance.
Parameters:
  AMI:
    Type: AWS::EC2::Image::Id
    Description: AMI ID is used to create an ec2 instance of corresponding OS.
    Default: "ami-0a1179631ec8933d7"
  InstanceType:
    Type: String
    Default: t2.micro
    Description: Selecting an instance type that meets our computing, memory, networking, or storage needs.
  KeyName:
    Type: String
    Default: test_ec2
    Description: We can use a key pair to securely connect to your instance.
  SecurityGroups:
    Type: String
    Default: sg-0cc98189ca101efbb
    Description: Security Group to add to EC2 Instance.
  EC2VPC:
    Type: AWS::EC2::VPC::Id
    Default: vpc-05d42dad479891e15
Resources:
  Raj:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds: 
        - Ref: SecurityGroups
      #SubnetId: !Ref EC2VPC
      UserData: 
        Fn::Base64: |
          #!/bin/bash
          #sudo su
          yum install httpd -y
          systemctl status httpd
          systemctl start httpd
          systemctl status httpd
          cd /var/www/html
          cat << EOL > /var/www/html/index.html
          <!DOCTYPE html>
            <html>
              <head>
                <title>Apache Web Server</title>
              </head>
              <body>
                <h1>Raj Website 1</h1>
                <p>This is a amazon linux 2 Machine.</p>
              </body>
            </html>
          EOL
          yum install docker -y
          systemctl status docker
          systemctl start docker
          systemctl status docker
          cat <<EOL > /var/www/html/dockerfile
          FROM rockylinux/rockylinux:latest 
          # Install apache2 with less
          RUN yum -y update && \
          yum -y install httpd && \
          yum clean all
 
          # Sample index.html for test 
          COPY index.html /var/www/html/index.html
 
          # Port and set entry point for container 
          EXPOSE 80
          ENTRYPOINT /usr/sbin/httpd -DFOREGROUND
          EOL
          docker build -t raj:web .
          docker run -d -it -p 8080:80 -t raj:web
          docker run -d -it -p 8081:80 -t raj:web
          docker run -d -it -p 9002:80 -t raj:web
  